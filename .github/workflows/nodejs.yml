# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    
    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules # Chemin du dossier Ã  mettre en cache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    

    - run: npm i
  test1:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.build.outputs.cache-key }}" # Version identique au build


    - name: Restore node_modules cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup docker-compose          
      uses: KengoTODA/actions-setup-docker-compose@v1.2.3
      with:
        version: '2.14.2' # the full version of `docker-compose` command

    - run: npm test
  
  test2:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.build.outputs.cache-key }}" # Version identique au build


    - name: Restore node_modules cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup docker-compose          
      uses: KengoTODA/actions-setup-docker-compose@v1.2.3
      with:
        version: '2.14.2' # the full version of `docker-compose` command

    - run: npm run test:nestjs

  test3:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.build.outputs.cache-key }}" # Version identique au build


    - name: Restore node_modules cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup docker-compose          
      uses: KengoTODA/actions-setup-docker-compose@v1.2.3
      with:
        version: '2.14.2' # the full version of `docker-compose` command

    - run: npm run test:mocha
